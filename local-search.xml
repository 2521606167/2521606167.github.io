<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>title与h1的区别、b与strong的区别、i与em的区别？</title>
    <link href="/2022/10/21/title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
    <url>/2022/10/21/title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1>title与h1的区别、b与strong的区别、i与em的区别？</h1><h1>title与h1的区别：</h1><ul class="lvl-0"><li class="lvl-2"><p>title他是显示在网页标题上、h1是显示在网页内容上</p></li><li class="lvl-2"><p>在做网站SEO的层面上，title&gt;h1（蜘蛛先爬title）场景：</p></li><li class="lvl-4"><p>网站的logo都是用h1标签包裹的</p></li></ul><h1>b与strong的区别：</h1><p>定义：</p><ul class="lvl-0"><li class="lvl-4"><p>b：实体标签，用来给文字加粗的。</p></li><li class="lvl-4"><p>strong：逻辑标签，用来加强字符语气的。</p></li></ul><hr><p>区别：</p><ul class="lvl-0"><li class="lvl-5"><p>b只是一个加粗标签，没什么特殊含义</p></li><li class="lvl-5"><p>strong也是一个加粗标签，但是有特殊含义，（强调：阅读器、seo）</p></li></ul><h1>i与em的区别：</h1><p>定义：</p><ul class="lvl-0"><li class="lvl-4"><p>i:实体标签，用来做文字倾斜的。</p></li><li class="lvl-4"><p>em：是逻辑标签，用来强调文字内容的</p></li></ul><hr><p>区别：</p><ul class="lvl-0"><li class="lvl-4"><p>i只是一个倾斜标签，没有实际含义。</p></li><li class="lvl-4"><p>em表示标签内字符重要，用以强调的。场景：</p></li><li class="lvl-4"><p>i更多的用在字体图标，em术语上（医药，生物）。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>link 与 @import 的区别</title>
    <link href="/2022/10/21/link-%E4%B8%8E-import-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2022/10/21/link-%E4%B8%8E-import-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h1>link 与 @import 的区别</h1><ol><li class="lvl-3">link 属于 html 标签，而@import 是 css提供</li><li class="lvl-3">页面被加载时，link 会同时被加载，而@import 引用的 css 会等到页面加载结束后加载</li><li class="lvl-3">link 方式样式的权重高于@import 的</li></ol>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>行内元素有哪些？块级元素有哪些？ 空(void)元素有哪些？</title>
    <link href="/2022/10/21/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F-%E7%A9%BA-void-%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/"/>
    <url>/2022/10/21/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F-%E7%A9%BA-void-%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1>行内元素有哪些？块级元素有哪些？ 空(void)元素有哪些？</h1><p>行内元素：span、img、input…<br>块级元素：div、footer、header、section、p、h1…h6…<br>空元素：br、hr…</p><p>元素之间的转换问题：<br>display: inline;       把某元素转换成了行内元素===&gt;不独占一行的，并且不能设置宽高<br>display: inline-block; 把某元素转换成了行内块元素===&gt;不独占一行的，可以设置宽高<br>display: block;        把某元素转换成了块元素===&gt;独占一行，并且可以设置宽高</p>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue2的生命周期</title>
    <link href="/2022/10/21/vue%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <url>/2022/10/21/vue%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h1>vue2的生命周期?</h1><h2 id="1、系统自带：">1、系统自带：</h2><p>beforeCreate<br>created<br>beforeMount<br>mounted<br>beforeUpdate<br>updated<br>beforeDestroy<br>destroyed</p><h2 id="2、一旦进入到页面或者组件，会执行哪些生命周期，顺序">2、一旦进入到页面或者组件，会执行哪些生命周期，顺序</h2><p>beforeCreate<br>created<br>beforeMount<br>mounted</p><h2 id="3、在哪个阶段有-el-在哪个阶段有-data">3、在哪个阶段有$el,在哪个阶段有$data</h2><p>created  有data没有el</p><p>mounted 都有</p><h2 id="4、如果加入keep-alive会多两个生命周期">4、如果加入keep-alive会多两个生命周期</h2><p>activated、deactivated</p><h2 id="5、如果加入了keep-alive-第一次进入组件会执行哪些生命周期？">5、如果加入了keep-alive,第一次进入组件会执行哪些生命周期？</h2><p>beforeCreate<br>created<br>beforeMount<br>mounted<br>activated</p><h2 id="6、如果加入了keep-alive-第二次或者第n次进入组件会执行哪些生命周期">6、如果加入了keep-alive,第二次或者第n次进入组件会执行哪些生命周期</h2><p>只执行一个生命周期：activated</p>]]></content>
    
    
    <categories>
      
      <category>Vue2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Html-innerText与innerHTML的区别</title>
    <link href="/2022/10/20/Html/"/>
    <url>/2022/10/20/Html/</url>
    
    <content type="html"><![CDATA[<ol><li class="lvl-3"><p>innerText ：不识别html标签 非标准 去除空格和换行</p></li><li class="lvl-3"><p>innerHTML：识别html标签 w3c标准  保留空格和换行</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Html</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css-伪元素和伪类的区别总结</title>
    <link href="/2022/10/20/css%E4%BC%AA%E5%85%83%E7%B4%A0-%E4%BC%AA%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/2022/10/20/css%E4%BC%AA%E5%85%83%E7%B4%A0-%E4%BC%AA%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>伪元素本身不存在在DOM文档中，它需要人为的去创建它。且就算你创建了伪元素，它也只是逻辑上存在，实际上也并不存在DOM文档中，也就是说你无法使用JS去获取改变它。</p><p>伪类它存在于DOM文档中，但如果你没有特别的去声明它，你就看不到它。</p><ol><li class="lvl-3"><p>伪元素是创建了一个新元素，而伪类本身就存在只不过不用特别声明</p></li><li class="lvl-3"><p>伪元素使用<code>:</code>或者<code>::</code>声明(前者是css2的声明方式，后者是css3)，而伪类只能使用<code>：</code> (建议在H5中伪元素统一用<code>::</code> 以便区分伪元素和伪类)</p></li><li class="lvl-3"><p>伪元素只能同时使用一个，伪类可以同时使用多个</p></li></ol><p>常见伪元素</p><ul class="lvl-0"><li class="lvl-2"><p>::after (:after)</p></li><li class="lvl-2"><p>::before (:before)</p></li><li class="lvl-2"><p>::cue (:cue)</p></li><li class="lvl-2"><p>::first-letter (:first-letter)</p></li><li class="lvl-2"><p>::first-line (:first-line)</p></li><li class="lvl-2"><p>::selection</p></li><li class="lvl-2"><p>::slotted()</p></li><li class="lvl-2"><p>::spelling-error</p></li></ul><p>常见伪类</p><ul class="lvl-0"><li class="lvl-2"><p>:active</p></li><li class="lvl-2"><p>:disabled</p></li><li class="lvl-2"><p>:first</p></li><li class="lvl-2"><p>:first-child</p></li><li class="lvl-2"><p>:first-of-type</p></li><li class="lvl-2"><p>:hover</p></li><li class="lvl-2"><p>:not()</p></li><li class="lvl-2"><p>:required</p></li></ul><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css-盒子模型</title>
    <link href="/2022/10/20/css-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    <url>/2022/10/20/css-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1>css盒子模型</h1><ol><li class="lvl-3"><p>W3C盒子（标准盒子模型）由margin，border，padding，content，设置的width height是针对content的</p></li><li class="lvl-3"><p>IE盒子（怪异盒子模型）由margin，border，padding，content构成，但是设置的width height是包括border+padding+content</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="/2022/10/19/hello-world/"/>
    <url>/2022/10/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
